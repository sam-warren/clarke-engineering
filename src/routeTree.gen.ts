/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProjectsImport } from './routes/projects'
import { Route as ContactImport } from './routes/contact'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as ServicesIndexImport } from './routes/services/index'
import { Route as ServicesWasteDisposalImport } from './routes/services/waste-disposal'
import { Route as ServicesTruckAutomotiveRepairsImport } from './routes/services/truck-automotive-repairs'
import { Route as ServicesPavingEquipmentImport } from './routes/services/paving-equipment'
import { Route as ServicesMunicipalGovernmentImport } from './routes/services/municipal-government'
import { Route as ServicesMarineEngineeringImport } from './routes/services/marine-engineering'
import { Route as ServicesExcavatorRepairsImport } from './routes/services/excavator-repairs'
import { Route as ServicesElevatorCraneRepairsImport } from './routes/services/elevator-crane-repairs'
import { Route as ServicesConstructionRepairsImport } from './routes/services/construction-repairs'
import { Route as ServicesConcreteEquipmentImport } from './routes/services/concrete-equipment'

// Create/Update Routes

const ProjectsRoute = ProjectsImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ServicesIndexRoute = ServicesIndexImport.update({
  id: '/services/',
  path: '/services/',
  getParentRoute: () => rootRoute,
} as any)

const ServicesWasteDisposalRoute = ServicesWasteDisposalImport.update({
  id: '/services/waste-disposal',
  path: '/services/waste-disposal',
  getParentRoute: () => rootRoute,
} as any)

const ServicesTruckAutomotiveRepairsRoute =
  ServicesTruckAutomotiveRepairsImport.update({
    id: '/services/truck-automotive-repairs',
    path: '/services/truck-automotive-repairs',
    getParentRoute: () => rootRoute,
  } as any)

const ServicesPavingEquipmentRoute = ServicesPavingEquipmentImport.update({
  id: '/services/paving-equipment',
  path: '/services/paving-equipment',
  getParentRoute: () => rootRoute,
} as any)

const ServicesMunicipalGovernmentRoute =
  ServicesMunicipalGovernmentImport.update({
    id: '/services/municipal-government',
    path: '/services/municipal-government',
    getParentRoute: () => rootRoute,
  } as any)

const ServicesMarineEngineeringRoute = ServicesMarineEngineeringImport.update({
  id: '/services/marine-engineering',
  path: '/services/marine-engineering',
  getParentRoute: () => rootRoute,
} as any)

const ServicesExcavatorRepairsRoute = ServicesExcavatorRepairsImport.update({
  id: '/services/excavator-repairs',
  path: '/services/excavator-repairs',
  getParentRoute: () => rootRoute,
} as any)

const ServicesElevatorCraneRepairsRoute =
  ServicesElevatorCraneRepairsImport.update({
    id: '/services/elevator-crane-repairs',
    path: '/services/elevator-crane-repairs',
    getParentRoute: () => rootRoute,
  } as any)

const ServicesConstructionRepairsRoute =
  ServicesConstructionRepairsImport.update({
    id: '/services/construction-repairs',
    path: '/services/construction-repairs',
    getParentRoute: () => rootRoute,
  } as any)

const ServicesConcreteEquipmentRoute = ServicesConcreteEquipmentImport.update({
  id: '/services/concrete-equipment',
  path: '/services/concrete-equipment',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsImport
      parentRoute: typeof rootRoute
    }
    '/services/concrete-equipment': {
      id: '/services/concrete-equipment'
      path: '/services/concrete-equipment'
      fullPath: '/services/concrete-equipment'
      preLoaderRoute: typeof ServicesConcreteEquipmentImport
      parentRoute: typeof rootRoute
    }
    '/services/construction-repairs': {
      id: '/services/construction-repairs'
      path: '/services/construction-repairs'
      fullPath: '/services/construction-repairs'
      preLoaderRoute: typeof ServicesConstructionRepairsImport
      parentRoute: typeof rootRoute
    }
    '/services/elevator-crane-repairs': {
      id: '/services/elevator-crane-repairs'
      path: '/services/elevator-crane-repairs'
      fullPath: '/services/elevator-crane-repairs'
      preLoaderRoute: typeof ServicesElevatorCraneRepairsImport
      parentRoute: typeof rootRoute
    }
    '/services/excavator-repairs': {
      id: '/services/excavator-repairs'
      path: '/services/excavator-repairs'
      fullPath: '/services/excavator-repairs'
      preLoaderRoute: typeof ServicesExcavatorRepairsImport
      parentRoute: typeof rootRoute
    }
    '/services/marine-engineering': {
      id: '/services/marine-engineering'
      path: '/services/marine-engineering'
      fullPath: '/services/marine-engineering'
      preLoaderRoute: typeof ServicesMarineEngineeringImport
      parentRoute: typeof rootRoute
    }
    '/services/municipal-government': {
      id: '/services/municipal-government'
      path: '/services/municipal-government'
      fullPath: '/services/municipal-government'
      preLoaderRoute: typeof ServicesMunicipalGovernmentImport
      parentRoute: typeof rootRoute
    }
    '/services/paving-equipment': {
      id: '/services/paving-equipment'
      path: '/services/paving-equipment'
      fullPath: '/services/paving-equipment'
      preLoaderRoute: typeof ServicesPavingEquipmentImport
      parentRoute: typeof rootRoute
    }
    '/services/truck-automotive-repairs': {
      id: '/services/truck-automotive-repairs'
      path: '/services/truck-automotive-repairs'
      fullPath: '/services/truck-automotive-repairs'
      preLoaderRoute: typeof ServicesTruckAutomotiveRepairsImport
      parentRoute: typeof rootRoute
    }
    '/services/waste-disposal': {
      id: '/services/waste-disposal'
      path: '/services/waste-disposal'
      fullPath: '/services/waste-disposal'
      preLoaderRoute: typeof ServicesWasteDisposalImport
      parentRoute: typeof rootRoute
    }
    '/services/': {
      id: '/services/'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof ServicesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/projects': typeof ProjectsRoute
  '/services/concrete-equipment': typeof ServicesConcreteEquipmentRoute
  '/services/construction-repairs': typeof ServicesConstructionRepairsRoute
  '/services/elevator-crane-repairs': typeof ServicesElevatorCraneRepairsRoute
  '/services/excavator-repairs': typeof ServicesExcavatorRepairsRoute
  '/services/marine-engineering': typeof ServicesMarineEngineeringRoute
  '/services/municipal-government': typeof ServicesMunicipalGovernmentRoute
  '/services/paving-equipment': typeof ServicesPavingEquipmentRoute
  '/services/truck-automotive-repairs': typeof ServicesTruckAutomotiveRepairsRoute
  '/services/waste-disposal': typeof ServicesWasteDisposalRoute
  '/services': typeof ServicesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/projects': typeof ProjectsRoute
  '/services/concrete-equipment': typeof ServicesConcreteEquipmentRoute
  '/services/construction-repairs': typeof ServicesConstructionRepairsRoute
  '/services/elevator-crane-repairs': typeof ServicesElevatorCraneRepairsRoute
  '/services/excavator-repairs': typeof ServicesExcavatorRepairsRoute
  '/services/marine-engineering': typeof ServicesMarineEngineeringRoute
  '/services/municipal-government': typeof ServicesMunicipalGovernmentRoute
  '/services/paving-equipment': typeof ServicesPavingEquipmentRoute
  '/services/truck-automotive-repairs': typeof ServicesTruckAutomotiveRepairsRoute
  '/services/waste-disposal': typeof ServicesWasteDisposalRoute
  '/services': typeof ServicesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/projects': typeof ProjectsRoute
  '/services/concrete-equipment': typeof ServicesConcreteEquipmentRoute
  '/services/construction-repairs': typeof ServicesConstructionRepairsRoute
  '/services/elevator-crane-repairs': typeof ServicesElevatorCraneRepairsRoute
  '/services/excavator-repairs': typeof ServicesExcavatorRepairsRoute
  '/services/marine-engineering': typeof ServicesMarineEngineeringRoute
  '/services/municipal-government': typeof ServicesMunicipalGovernmentRoute
  '/services/paving-equipment': typeof ServicesPavingEquipmentRoute
  '/services/truck-automotive-repairs': typeof ServicesTruckAutomotiveRepairsRoute
  '/services/waste-disposal': typeof ServicesWasteDisposalRoute
  '/services/': typeof ServicesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/contact'
    | '/projects'
    | '/services/concrete-equipment'
    | '/services/construction-repairs'
    | '/services/elevator-crane-repairs'
    | '/services/excavator-repairs'
    | '/services/marine-engineering'
    | '/services/municipal-government'
    | '/services/paving-equipment'
    | '/services/truck-automotive-repairs'
    | '/services/waste-disposal'
    | '/services'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/contact'
    | '/projects'
    | '/services/concrete-equipment'
    | '/services/construction-repairs'
    | '/services/elevator-crane-repairs'
    | '/services/excavator-repairs'
    | '/services/marine-engineering'
    | '/services/municipal-government'
    | '/services/paving-equipment'
    | '/services/truck-automotive-repairs'
    | '/services/waste-disposal'
    | '/services'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/contact'
    | '/projects'
    | '/services/concrete-equipment'
    | '/services/construction-repairs'
    | '/services/elevator-crane-repairs'
    | '/services/excavator-repairs'
    | '/services/marine-engineering'
    | '/services/municipal-government'
    | '/services/paving-equipment'
    | '/services/truck-automotive-repairs'
    | '/services/waste-disposal'
    | '/services/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  ProjectsRoute: typeof ProjectsRoute
  ServicesConcreteEquipmentRoute: typeof ServicesConcreteEquipmentRoute
  ServicesConstructionRepairsRoute: typeof ServicesConstructionRepairsRoute
  ServicesElevatorCraneRepairsRoute: typeof ServicesElevatorCraneRepairsRoute
  ServicesExcavatorRepairsRoute: typeof ServicesExcavatorRepairsRoute
  ServicesMarineEngineeringRoute: typeof ServicesMarineEngineeringRoute
  ServicesMunicipalGovernmentRoute: typeof ServicesMunicipalGovernmentRoute
  ServicesPavingEquipmentRoute: typeof ServicesPavingEquipmentRoute
  ServicesTruckAutomotiveRepairsRoute: typeof ServicesTruckAutomotiveRepairsRoute
  ServicesWasteDisposalRoute: typeof ServicesWasteDisposalRoute
  ServicesIndexRoute: typeof ServicesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  ProjectsRoute: ProjectsRoute,
  ServicesConcreteEquipmentRoute: ServicesConcreteEquipmentRoute,
  ServicesConstructionRepairsRoute: ServicesConstructionRepairsRoute,
  ServicesElevatorCraneRepairsRoute: ServicesElevatorCraneRepairsRoute,
  ServicesExcavatorRepairsRoute: ServicesExcavatorRepairsRoute,
  ServicesMarineEngineeringRoute: ServicesMarineEngineeringRoute,
  ServicesMunicipalGovernmentRoute: ServicesMunicipalGovernmentRoute,
  ServicesPavingEquipmentRoute: ServicesPavingEquipmentRoute,
  ServicesTruckAutomotiveRepairsRoute: ServicesTruckAutomotiveRepairsRoute,
  ServicesWasteDisposalRoute: ServicesWasteDisposalRoute,
  ServicesIndexRoute: ServicesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/contact",
        "/projects",
        "/services/concrete-equipment",
        "/services/construction-repairs",
        "/services/elevator-crane-repairs",
        "/services/excavator-repairs",
        "/services/marine-engineering",
        "/services/municipal-government",
        "/services/paving-equipment",
        "/services/truck-automotive-repairs",
        "/services/waste-disposal",
        "/services/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/projects": {
      "filePath": "projects.tsx"
    },
    "/services/concrete-equipment": {
      "filePath": "services/concrete-equipment.tsx"
    },
    "/services/construction-repairs": {
      "filePath": "services/construction-repairs.tsx"
    },
    "/services/elevator-crane-repairs": {
      "filePath": "services/elevator-crane-repairs.tsx"
    },
    "/services/excavator-repairs": {
      "filePath": "services/excavator-repairs.tsx"
    },
    "/services/marine-engineering": {
      "filePath": "services/marine-engineering.tsx"
    },
    "/services/municipal-government": {
      "filePath": "services/municipal-government.tsx"
    },
    "/services/paving-equipment": {
      "filePath": "services/paving-equipment.tsx"
    },
    "/services/truck-automotive-repairs": {
      "filePath": "services/truck-automotive-repairs.tsx"
    },
    "/services/waste-disposal": {
      "filePath": "services/waste-disposal.tsx"
    },
    "/services/": {
      "filePath": "services/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
